/*
 * Copyright (c) 2007 Norman Brandinger <norm@goes.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

/*
 * Generated by asn1c-0.9.22 (http://lionet.info/asn1c)
 * From ASN.1 module "T1S1-LAES-VoP-Abstract-Syntax-Module"
 * 	found in "T1S1-LAES-VoP-Abstract-Syntax-Module.asn"
 * 	`asn1c -funnamed-unions -findirect-choice -fbless-SIZE -fcompound-names -fnative-types`
 */

#ifndef	_PartyIdentity_H_
#define	_PartyIdentity_H_


#include <asn_application.h>

/* Including external dependencies */
#include <VisibleString.h>
#include <OCTET_STRING.h>
#include <UTF8String.h>
#include <asn_SEQUENCE_OF.h>
#include <constr_SEQUENCE_OF.h>
#include <asn_SET_OF.h>
#include <constr_SET_OF.h>
#include "SipHeader.h"
#include <constr_SEQUENCE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Forward declarations */
struct IpAddress;
struct AliasAddress;
struct AddressPattern;
struct TransportAddress;

/* PartyIdentity */
typedef struct PartyIdentity {
	VisibleString_t	*esn	/* OPTIONAL */;
	VisibleString_t	*imei	/* OPTIONAL */;
	VisibleString_t	*tei	/* OPTIONAL */;
	VisibleString_t	*spid	/* OPTIONAL */;
	VisibleString_t	*imsi	/* OPTIONAL */;
	VisibleString_t	*min	/* OPTIONAL */;
	VisibleString_t	*dn	/* OPTIONAL */;
	VisibleString_t	*userProvided	/* OPTIONAL */;
	VisibleString_t	*appearanceId	/* OPTIONAL */;
	VisibleString_t	*callingCardNum	/* OPTIONAL */;
	struct IpAddress	*ipAddress	/* OPTIONAL */;
	VisibleString_t	*x121	/* OPTIONAL */;
	VisibleString_t	*trunkId	/* OPTIONAL */;
	OCTET_STRING_t	*subaddress	/* OPTIONAL */;
	struct PartyIdentity__genericAddress {
		A_SEQUENCE_OF(VisibleString_t) list;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *genericAddress;
	struct PartyIdentity__genericDigits {
		A_SEQUENCE_OF(VisibleString_t) list;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *genericDigits;
	struct PartyIdentity__genericName {
		A_SEQUENCE_OF(UTF8String_t) list;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *genericName;
	VisibleString_t	*port	/* OPTIONAL */;
	VisibleString_t	*context	/* OPTIONAL */;
	OCTET_STRING_t	*isdnHighLayer	/* OPTIONAL */;
	OCTET_STRING_t	*isdnLowLayer	/* OPTIONAL */;
	struct PartyIdentity__uri {
		A_SET_OF(UTF8String_t) list;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *uri;
	struct PartyIdentity__sipHeader {
		A_SET_OF(SipHeader_t) list;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *sipHeader;
	struct PartyIdentity__h323AliasAddress {
		A_SEQUENCE_OF(struct AliasAddress) list;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *h323AliasAddress;
	struct PartyIdentity__h323AddressPattern {
		A_SEQUENCE_OF(struct AddressPattern) list;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *h323AddressPattern;
	struct PartyIdentity__h323RASAddress {
		A_SEQUENCE_OF(struct TransportAddress) list;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *h323RASAddress;
	struct PartyIdentity__h323CallSigAddress {
		A_SEQUENCE_OF(struct TransportAddress) list;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *h323CallSigAddress;
	UTF8String_t	*nai	/* OPTIONAL */;
	VisibleString_t	*mac802	/* OPTIONAL */;
	UTF8String_t	*fqdn	/* OPTIONAL */;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} PartyIdentity_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_PartyIdentity;

#ifdef __cplusplus
}
#endif

/* Referred external types */
#include "IpAddress.h"
#include "AliasAddress.h"
#include "AddressPattern.h"
#include "TransportAddress.h"

#endif	/* _PartyIdentity_H_ */
