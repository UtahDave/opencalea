/*
 * This file is autogenerated by the ASN.1 compiler.
 * Copyright (c) 2003-2007 Lev Walkin <vlm@lionet.info>
 * See http://lionet.info/asn1c
 *
 * Source ASN.1 file is Copyright (c) by US CALEA, included
 * with permission (if included). <<< this depends on whether
 * or not you include the original ASN.1 file into OpenCALEA >>>
 *
 * This file is part of OpenCALEA suite (http://opencalea.org)
 * and is subject to OpenCALEA license (see COPYING file in the
 * root of the opencalea distribution).
 *
 * Copyright (c) 2007 Norman Brandinger <norm@goes.com>
 *
 */

/*
 * Generated by asn1c-0.9.22 (http://lionet.info/asn1c)
 * From ASN.1 module "T1S1-LAES-VoP-Abstract-Syntax-Module"
 * 	found in "T1S1-LAES-VoP-Abstract-Syntax-Module.asn"
 * 	`asn1c -fnative-types`
 */

#ifndef	_H323MediaParameterType_H_
#define	_H323MediaParameterType_H_


#include <asn_application.h>

/* Including external dependencies */
#include <NativeEnumerated.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum H323MediaParameterType {
	H323MediaParameterType_fastStart	= 0,
	H323MediaParameterType_openLogicalChannel	= 1,
	H323MediaParameterType_openLogicalChannelAck	= 2,
	H323MediaParameterType_openLogicalChannelReject	= 3,
	H323MediaParameterType_openLogicalChannelConfirm	= 4,
	H323MediaParameterType_closeLogicalChannel	= 5,
	H323MediaParameterType_closeLogicalChannelAck	= 6,
	H323MediaParameterType_requestChannelClose	= 7,
	H323MediaParameterType_requestChannelCloseAck	= 8,
	H323MediaParameterType_requestChannelCloseReject	= 9,
	H323MediaParameterType_requestChannelCloseRelease	= 10
} e_H323MediaParameterType;

/* H323MediaParameterType */
typedef long	 H323MediaParameterType_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_H323MediaParameterType;
asn_struct_free_f H323MediaParameterType_free;
asn_struct_print_f H323MediaParameterType_print;
asn_constr_check_f H323MediaParameterType_constraint;
ber_type_decoder_f H323MediaParameterType_decode_ber;
der_type_encoder_f H323MediaParameterType_encode_der;
xer_type_decoder_f H323MediaParameterType_decode_xer;
xer_type_encoder_f H323MediaParameterType_encode_xer;

#ifdef __cplusplus
}
#endif

#endif	/* _H323MediaParameterType_H_ */
