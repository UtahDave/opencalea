/*
 * Copyright (c) 2007 Norman Brandinger <norm@goes.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

/*
 * Generated by asn1c-0.9.22 (http://lionet.info/asn1c)
 * From ASN.1 module "T1S1-LAES-VoP-Abstract-Syntax-Module"
 * 	found in "T1S1-LAES-VoP-Abstract-Syntax-Module.asn"
 * 	`asn1c -funnamed-unions -findirect-choice -fbless-SIZE -fcompound-names -fnative-types`
 */

#ifndef	_DataProtocolCapability_H_
#define	_DataProtocolCapability_H_


#include <asn_application.h>

/* Including external dependencies */
#include <NULL.h>
#include <constr_CHOICE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum DataProtocolCapability_PR {
	DataProtocolCapability_PR_NOTHING,	/* No components present */
	DataProtocolCapability_PR_nonStandard,
	DataProtocolCapability_PR_v14buffered,
	DataProtocolCapability_PR_v42lapm,
	DataProtocolCapability_PR_hdlcFrameTunnelling,
	DataProtocolCapability_PR_h310SeparateVCStack,
	DataProtocolCapability_PR_h310SingleVCStack,
	DataProtocolCapability_PR_transparent,
	/* Extensions may appear below */
	DataProtocolCapability_PR_segmentationAndReassembly,
	DataProtocolCapability_PR_hdlcFrameTunnelingwSAR,
	DataProtocolCapability_PR_v120,
	DataProtocolCapability_PR_separateLANStack,
	DataProtocolCapability_PR_v76wCompression,
	DataProtocolCapability_PR_tcp,
	DataProtocolCapability_PR_udp
} DataProtocolCapability_PR;
typedef enum DataProtocolCapability__v76wCompression_PR {
	DataProtocolCapability__v76wCompression_PR_NOTHING,	/* No components present */
	DataProtocolCapability__v76wCompression_PR_transmitCompression,
	DataProtocolCapability__v76wCompression_PR_receiveCompression,
	DataProtocolCapability__v76wCompression_PR_transmitAndReceiveCompression,
	/* Extensions may appear below */
	
} DataProtocolCapability__v76wCompression_PR;

/* Forward declarations */
struct NonStandardParameter;
struct CompressionType;

/* DataProtocolCapability */
typedef struct DataProtocolCapability {
	DataProtocolCapability_PR present;
	union {
		struct NonStandardParameter	*nonStandard;
		NULL_t	 v14buffered;
		NULL_t	 v42lapm;
		NULL_t	 hdlcFrameTunnelling;
		NULL_t	 h310SeparateVCStack;
		NULL_t	 h310SingleVCStack;
		NULL_t	 transparent;
		/*
		 * This type is extensible,
		 * possible extensions are below.
		 */
		NULL_t	 segmentationAndReassembly;
		NULL_t	 hdlcFrameTunnelingwSAR;
		NULL_t	 v120;
		NULL_t	 separateLANStack;
		struct DataProtocolCapability__v76wCompression {
			DataProtocolCapability__v76wCompression_PR present;
			union {
				struct CompressionType	*transmitCompression;
				struct CompressionType	*receiveCompression;
				struct CompressionType	*transmitAndReceiveCompression;
				/*
				 * This type is extensible,
				 * possible extensions are below.
				 */
			};
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} *v76wCompression;
		NULL_t	 tcp;
		NULL_t	 udp;
	};
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} DataProtocolCapability_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_DataProtocolCapability;

#ifdef __cplusplus
}
#endif

/* Referred external types */
#include "NonStandardParameter.h"
#include "CompressionType.h"

#endif	/* _DataProtocolCapability_H_ */
