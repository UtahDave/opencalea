/*
 * This file is autogenerated by the ASN.1 compiler.
 * Copyright (c) 2003-2007 Lev Walkin <vlm@lionet.info>
 * See http://lionet.info/asn1c
 *
 * Source ASN.1 file is Copyright (c) by US CALEA, included
 * with permission (if included). <<< this depends on whether
 * or not you include the original ASN.1 file into OpenCALEA >>>
 *
 * This file is part of OpenCALEA suite (http://opencalea.org)
 * and is subject to OpenCALEA license (see COPYING file in the
 * root of the opencalea distribution).
 *
 * Copyright (c) 2007 Norman Brandinger <norm@goes.com>
 *
 */

/*
 * Generated by asn1c-0.9.22 (http://lionet.info/asn1c)
 * From ASN.1 module "T1S1-LAES-VoP-Abstract-Syntax-Module"
 * 	found in "T1S1-LAES-VoP-Abstract-Syntax-Module.asn"
 * 	`asn1c -fnative-types`
 */

#ifndef	_MediaInformation_H_
#define	_MediaInformation_H_


#include <asn_application.h>

/* Including external dependencies */
#include <NativeEnumerated.h>
#include <UTF8String.h>
#include "H323Media.h"
#include <OBJECT_IDENTIFIER.h>
#include <OCTET_STRING.h>
#include <constr_SEQUENCE.h>
#include <constr_CHOICE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum MediaInformation__characteristics_PR {
	MediaInformation__characteristics_PR_NOTHING,	/* No components present */
	MediaInformation__characteristics_PR_sdp,
	MediaInformation__characteristics_PR_h323Media,
	MediaInformation__characteristics_PR_other
} MediaInformation__characteristics_PR;
typedef enum MediaInformation__status {
	MediaInformation__status_requested	= 0,
	MediaInformation__status_granted	= 1,
	MediaInformation__status_rejected	= 2,
	MediaInformation__status_relayed	= 3
} e_MediaInformation__status;

/* Forward declarations */
struct BearerCapability;

/* MediaInformation */
typedef struct MediaInformation {
	struct BearerCapability	*bearerCapability	/* OPTIONAL */;
	struct MediaInformation__characteristics {
		MediaInformation__characteristics_PR present;
		union MediaInformation__characteristics_u {
			UTF8String_t	 sdp;
			H323Media_t	 h323Media;
			struct MediaInformation__characteristics__other {
				OBJECT_IDENTIFIER_t	 type;
				OCTET_STRING_t	 value;
				
				/* Context for parsing across buffer boundaries */
				asn_struct_ctx_t _asn_ctx;
			} other;
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *characteristics;
	long	*status	/* OPTIONAL */;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} MediaInformation_t;

/* Implementation */
/* extern asn_TYPE_descriptor_t asn_DEF_status_9;	// (Use -fall-defs-global to expose) */
extern asn_TYPE_descriptor_t asn_DEF_MediaInformation;

#ifdef __cplusplus
}
#endif

/* Referred external types */
#include "BearerCapability.h"

#endif	/* _MediaInformation_H_ */
