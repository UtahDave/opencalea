/*
 * Copyright (c) 2007 Norman Brandinger <norm@goes.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

/*
 * Generated by asn1c-0.9.22 (http://lionet.info/asn1c)
 * From ASN.1 module "T1S1-LAES-VoP-Abstract-Syntax-Module"
 * 	found in "T1S1-LAES-VoP-Abstract-Syntax-Module.asn"
 * 	`asn1c -funnamed-unions -findirect-choice -fbless-SIZE -fcompound-names -fnative-types`
 */

#ifndef	_TerminationAttempt_H_
#define	_TerminationAttempt_H_


#include <asn_application.h>

/* Including external dependencies */
#include "CaseIdentity.h"
#include "IAPSystemIdentity.h"
#include "TimeStamp.h"
#include "CallIdentity.h"
#include "PartyIdentity.h"
#include <asn_SET_OF.h>
#include <constr_SET_OF.h>
#include <constr_SEQUENCE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Forward declarations */
struct PartyIdentity;
struct Location;
struct MediaInformation;
struct RedirectedFromInformation;
struct ProtocolSpecificParameters;
struct EncapsulatedSignalingMessage;

/* TerminationAttempt */
typedef struct TerminationAttempt {
	CaseIdentity_t	 caseId;
	IAPSystemIdentity_t	*iAPSystemId	/* OPTIONAL */;
	TimeStamp_t	 timestamp;
	CallIdentity_t	 callId;
	PartyIdentity_t	 calling;
	struct PartyIdentity	*called	/* OPTIONAL */;
	struct Location	*location	/* OPTIONAL */;
	struct MediaInformation	*associateMedia	/* OPTIONAL */;
	struct RedirectedFromInformation	*redirectedFromInfo	/* OPTIONAL */;
	struct ProtocolSpecificParameters	*protocolSpecificParameters	/* OPTIONAL */;
	struct TerminationAttempt__signalingMsg {
		A_SET_OF(struct EncapsulatedSignalingMessage) list;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *signalingMsg;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} TerminationAttempt_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_TerminationAttempt;

#ifdef __cplusplus
}
#endif

/* Referred external types */
#include "PartyIdentity.h"
#include "Location.h"
#include "MediaInformation.h"
#include "RedirectedFromInformation.h"
#include "ProtocolSpecificParameters.h"
#include "EncapsulatedSignalingMessage.h"

#endif	/* _TerminationAttempt_H_ */
