/*
 * This file is autogenerated by the ASN.1 compiler.
 * Copyright (c) 2003-2007 Lev Walkin <vlm@lionet.info>
 * See http://lionet.info/asn1c
 *
 * Source ASN.1 file is Copyright (c) by US CALEA, included
 * with permission (if included). <<< this depends on whether
 * or not you include the original ASN.1 file into OpenCALEA >>>
 *
 * This file is part of OpenCALEA suite (http://opencalea.org)
 * and is subject to OpenCALEA license (see COPYING file in the
 * root of the opencalea distribution).
 *
 * Copyright (c) 2007 Norman Brandinger <norm@goes.com>
 *
 */

/*
 * Generated by asn1c-0.9.22 (http://lionet.info/asn1c)
 * From ASN.1 module "IAS-LAES-CmII-Optional-Messages-Abstract-Syntax-Module"
 * 	found in "IAS-LAES-CmII-Optional-Messages-Abstract-Syntax-Module.asn"
 * 	`asn1c -fnative-types`
 */

#ifndef	_IasOptionalMessage_H_
#define	_IasOptionalMessage_H_


#include <asn_application.h>

/* Including external dependencies */
#include "ServiceChange.h"
#include "VPNSecurityEstablishment.h"
#include "VPNSecurityRelease.h"
#include "SurveillanceActivation.h"
#include "SurveillanceContinuation.h"
#include "SurveillanceChange.h"
#include "SurveillanceDeActivation.h"
#include <constr_CHOICE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum IasOptionalMessage_PR {
	IasOptionalMessage_PR_NOTHING,	/* No components present */
	IasOptionalMessage_PR_serviceChange,
	IasOptionalMessage_PR_vpnSecurityEstablishment,
	IasOptionalMessage_PR_vpnSecurityRelease,
	IasOptionalMessage_PR_surveillanceActivation,
	IasOptionalMessage_PR_surveillanceContinuation,
	IasOptionalMessage_PR_surveillanceChange,
	IasOptionalMessage_PR_surveillanceDeActivation
} IasOptionalMessage_PR;

/* IasOptionalMessage */
typedef struct IasOptionalMessage {
	IasOptionalMessage_PR present;
	union IasOptionalMessage_u {
		ServiceChange_t	 serviceChange;
		VPNSecurityEstablishment_t	 vpnSecurityEstablishment;
		VPNSecurityRelease_t	 vpnSecurityRelease;
		SurveillanceActivation_t	 surveillanceActivation;
		SurveillanceContinuation_t	 surveillanceContinuation;
		SurveillanceChange_t	 surveillanceChange;
		SurveillanceDeActivation_t	 surveillanceDeActivation;
	} choice;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} IasOptionalMessage_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_IasOptionalMessage;

#ifdef __cplusplus
}
#endif

#endif	/* _IasOptionalMessage_H_ */
