/*
 * This file is autogenerated by the ASN.1 compiler.
 * Copyright (c) 2003-2007 Lev Walkin <vlm@lionet.info>
 * See http://lionet.info/asn1c
 *
 * Source ASN.1 file is Copyright (c) by US CALEA, included
 * with permission (if included). <<< this depends on whether
 * or not you include the original ASN.1 file into OpenCALEA >>>
 *
 * This file is part of OpenCALEA suite (http://opencalea.org)
 * and is subject to OpenCALEA license (see COPYING file in the
 * root of the opencalea distribution).
 *
 * Copyright (c) 2007 Norman Brandinger <norm@goes.com>
 *
 */

/*
 * Generated by asn1c-0.9.22 (http://lionet.info/asn1c)
 * From ASN.1 module "IAS-LAES-CmII-Abstract-Syntax-Module"
 * 	found in "IAS-LAES-CmII-Abstract-Syntax-Module.asn"
 * 	`asn1c -fnative-types`
 */

#ifndef	_IasMessage_H_
#define	_IasMessage_H_


#include <asn_application.h>

/* Including external dependencies */
#include "Access-Attempt.h"
#include "Access-Accepted.h"
#include "Access-Failed.h"
#include "Access-Session-End.h"
#include "Access-Rejected.h"
#include "Access-Signaling-Message-Report.h"
#include "Packet-Data-Session-Start.h"
#include "Packet-Data-Session-Failed.h"
#include "Packet-Data-Session-End.h"
#include "Packet-Data-Session-Already-Established.h"
#include "Packet-Data-Header-Report.h"
#include "Packet-Data-Summary-Report.h"
#include <constr_CHOICE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum IasMessage_PR {
	IasMessage_PR_NOTHING,	/* No components present */
	IasMessage_PR_access_Attempt,
	IasMessage_PR_access_Accepted,
	IasMessage_PR_access_Failed,
	IasMessage_PR_access_Session_End,
	IasMessage_PR_access_Rejected,
	IasMessage_PR_access_Signaling_Message_Report,
	IasMessage_PR_session_Start,
	IasMessage_PR_session_Failed,
	IasMessage_PR_session_End,
	IasMessage_PR_session_Already_Established,
	IasMessage_PR_data_Header_Report,
	IasMessage_PR_data_Summary_Report
} IasMessage_PR;

/* IasMessage */
typedef struct IasMessage {
	IasMessage_PR present;
	union IasMessage_u {
		Access_Attempt_t	 access_Attempt;
		Access_Accepted_t	 access_Accepted;
		Access_Failed_t	 access_Failed;
		Access_Session_End_t	 access_Session_End;
		Access_Rejected_t	 access_Rejected;
		Access_Signaling_Message_Report_t	 access_Signaling_Message_Report;
		Packet_Data_Session_Start_t	 session_Start;
		Packet_Data_Session_Failed_t	 session_Failed;
		Packet_Data_Session_End_t	 session_End;
		Packet_Data_Session_Already_Established_t	 session_Already_Established;
		Packet_Data_Header_Report_t	 data_Header_Report;
		Packet_Data_Summary_Report_t	 data_Summary_Report;
	} choice;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} IasMessage_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_IasMessage;

#ifdef __cplusplus
}
#endif

#endif	/* _IasMessage_H_ */
